/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$sprite-clock-name: 'sprite_clock';
$sprite-clock-x: 0px;
$sprite-clock-y: 28px;
$sprite-clock-offset-x: 0px;
$sprite-clock-offset-y: -28px;
$sprite-clock-width: 18px;
$sprite-clock-height: 18px;
$sprite-clock-total-width: 24px;
$sprite-clock-total-height: 119px;
$sprite-clock-image: 'sprite.png';
$sprite-clock: (0px, 28px, 0px, -28px, 18px, 18px, 24px, 119px, 'sprite.png', 'sprite_clock', );
$sprite-next-name: 'sprite_next';
$sprite-next-x: 0px;
$sprite-next-y: 69px;
$sprite-next-offset-x: 0px;
$sprite-next-offset-y: -69px;
$sprite-next-width: 12px;
$sprite-next-height: 24px;
$sprite-next-total-width: 24px;
$sprite-next-total-height: 119px;
$sprite-next-image: 'sprite.png';
$sprite-next: (0px, 69px, 0px, -69px, 12px, 24px, 24px, 119px, 'sprite.png', 'sprite_next', );
$sprite-photo-red-name: 'sprite_photo-red';
$sprite-photo-red-x: 0px;
$sprite-photo-red-y: 48px;
$sprite-photo-red-offset-x: 0px;
$sprite-photo-red-offset-y: -48px;
$sprite-photo-red-width: 24px;
$sprite-photo-red-height: 19px;
$sprite-photo-red-total-width: 24px;
$sprite-photo-red-total-height: 119px;
$sprite-photo-red-image: 'sprite.png';
$sprite-photo-red: (0px, 48px, 0px, -48px, 24px, 19px, 24px, 119px, 'sprite.png', 'sprite_photo-red', );
$sprite-photo-name: 'sprite_photo';
$sprite-photo-x: 0px;
$sprite-photo-y: 0px;
$sprite-photo-offset-x: 0px;
$sprite-photo-offset-y: 0px;
$sprite-photo-width: 16px;
$sprite-photo-height: 12px;
$sprite-photo-total-width: 24px;
$sprite-photo-total-height: 119px;
$sprite-photo-image: 'sprite.png';
$sprite-photo: (0px, 0px, 0px, 0px, 16px, 12px, 24px, 119px, 'sprite.png', 'sprite_photo', );
$sprite-prev-name: 'sprite_prev';
$sprite-prev-x: 0px;
$sprite-prev-y: 95px;
$sprite-prev-offset-x: 0px;
$sprite-prev-offset-y: -95px;
$sprite-prev-width: 12px;
$sprite-prev-height: 24px;
$sprite-prev-total-width: 24px;
$sprite-prev-total-height: 119px;
$sprite-prev-image: 'sprite.png';
$sprite-prev: (0px, 95px, 0px, -95px, 12px, 24px, 24px, 119px, 'sprite.png', 'sprite_prev', );
$sprite-video-name: 'sprite_video';
$sprite-video-x: 0px;
$sprite-video-y: 14px;
$sprite-video-offset-x: 0px;
$sprite-video-offset-y: -14px;
$sprite-video-width: 16px;
$sprite-video-height: 12px;
$sprite-video-total-width: 24px;
$sprite-video-total-height: 119px;
$sprite-video-image: 'sprite.png';
$sprite-video: (0px, 14px, 0px, -14px, 16px, 12px, 24px, 119px, 'sprite.png', 'sprite_video', );
$spritesheet-width: 24px;
$spritesheet-height: 119px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($sprite-clock, $sprite-next, $sprite-photo-red, $sprite-photo, $sprite-prev, $sprite-video, );
$spritesheet: (24px, 119px, 'sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
